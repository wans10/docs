// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`PlaygroundCodeSnippetBuilder > should render curl 1`] = `
"curl -X POST https://example.com/test/hello%40example \\
     -H "Accept: application/json" \\
     -H "Test: test" \\
     -d '{
  "test": "hello",
  "deeply": {
    "nested": 1
  }
}'"
`;

exports[`PlaygroundCodeSnippetBuilder > should render python 1`] = `
"import requests

# My endpoint (POST /test/:test)
response = requests.post(
  "https://example.com/test/hello%40example",
  headers={
    "Accept": "application/json",
    "Test": "test"
  },
  json={
    "test": "hello",
    "deeply": {
      "nested": 1
    }
  },
)

print(response.json())"
`;

exports[`PlaygroundCodeSnippetBuilder > should render python with multipart form data 1`] = `
"import requests
import json

# My endpoint (POST /test/:test)
response = requests.post(
  "https://example.com/test/hello%40example",
  headers={
    "Accept": "application/json"
  },
  data={
    'textField': "simple string value",
    'jsonField': json.dumps({
        "nested": {
          "value": 123
        }
      }),
  },
  files={
    'file1', ('test.txt', open('test.txt', 'rb')),
    'file2': ('image1.jpg', open('image1.jpg', 'rb')),
    'file2': ('image2.jpg', open('image2.jpg', 'rb'))
  },
)

print(response.json())"
`;

exports[`PlaygroundCodeSnippetBuilder > should render python with multipart form data without files 1`] = `
"import requests
import json

# My endpoint (POST /test/:test)
response = requests.post(
  "https://example.com/test/hello%40example",
  headers={
    "Accept": "application/json"
  },
  files={
    'textField': (None, "simple string value"),
    'jsonField': (None, json.dumps({
        "nested": {
          "value": 123
        }
      }))
  },
)

print(response.json())"
`;

exports[`PlaygroundCodeSnippetBuilder > should render typescript 1`] = `
"// My endpoint (POST /test/:test)
const response = await fetch("https://example.com/test/hello%40example", {
  method: "POST",
  headers: {
    "Accept": "application/json",
    "Test": "test"
  },
  body: JSON.stringify({
    "test": "hello",
    "deeply": {
      "nested": 1
    }
  }),
});

const body = await response.json();
console.log(body);"
`;
