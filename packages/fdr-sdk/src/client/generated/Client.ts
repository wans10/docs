/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "./environments";
import * as core from "./core";
import { Api } from "./api/resources/api/client/Client";
import { Dashboard } from "./api/resources/dashboard/client/Client";
import { Docs } from "./api/resources/docs/client/Client";
import { Generators } from "./api/resources/generators/client/Client";
import { Diff } from "./api/resources/diff/client/Client";
import { DocsCache } from "./api/resources/docsCache/client/Client";
import { Git } from "./api/resources/git/client/Client";
import { Sdks } from "./api/resources/sdks/client/Client";
import { SnippetsFactory } from "./api/resources/snippetsFactory/client/Client";
import { Snippets } from "./api/resources/snippets/client/Client";
import { Templates } from "./api/resources/templates/client/Client";
import { Tokens } from "./api/resources/tokens/client/Client";

export declare namespace FernRegistryClient {
    export interface Options {
        environment?: core.Supplier<environments.FernRegistryEnvironment | string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        token?: core.Supplier<core.BearerToken | undefined>;
    }

    export interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Additional headers to include in the request. */
        headers?: Record<string, string>;
    }
}

export class FernRegistryClient {
    protected _api: Api | undefined;
    protected _dashboard: Dashboard | undefined;
    protected _docs: Docs | undefined;
    protected _generators: Generators | undefined;
    protected _diff: Diff | undefined;
    protected _docsCache: DocsCache | undefined;
    protected _git: Git | undefined;
    protected _sdks: Sdks | undefined;
    protected _snippetsFactory: SnippetsFactory | undefined;
    protected _snippets: Snippets | undefined;
    protected _templates: Templates | undefined;
    protected _tokens: Tokens | undefined;

    constructor(protected readonly _options: FernRegistryClient.Options = {}) {}

    public get api(): Api {
        return (this._api ??= new Api(this._options));
    }

    public get dashboard(): Dashboard {
        return (this._dashboard ??= new Dashboard(this._options));
    }

    public get docs(): Docs {
        return (this._docs ??= new Docs(this._options));
    }

    public get generators(): Generators {
        return (this._generators ??= new Generators(this._options));
    }

    public get diff(): Diff {
        return (this._diff ??= new Diff(this._options));
    }

    public get docsCache(): DocsCache {
        return (this._docsCache ??= new DocsCache(this._options));
    }

    public get git(): Git {
        return (this._git ??= new Git(this._options));
    }

    public get sdks(): Sdks {
        return (this._sdks ??= new Sdks(this._options));
    }

    public get snippetsFactory(): SnippetsFactory {
        return (this._snippetsFactory ??= new SnippetsFactory(this._options));
    }

    public get snippets(): Snippets {
        return (this._snippets ??= new Snippets(this._options));
    }

    public get templates(): Templates {
        return (this._templates ??= new Templates(this._options));
    }

    public get tokens(): Tokens {
        return (this._tokens ??= new Tokens(this._options));
    }
}
