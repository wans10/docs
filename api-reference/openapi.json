{
  "openapi": "3.1.0",
  "info": {
    "title": "OpenAI Responses - Example API (from openai-responses.md)",
    "version": "1.0.0",
    "description": "完整的 OpenAPI 3.1.0 示例文档（基于 openai-responses.md），包含请求/响应字段说明、示例 JSON 和 curl/JavaScript/Python/C# 调用样例。可直接用于 Swagger UI 或 Redoc。"
  },
  "servers": [
    {
      "url": "https://你的newapi服务器地址/v1",
      "description": "替换为你自己的 API 基地址"
    }
  ],
  "paths": {
    "/responses": {
      "post": {
        "summary": "创建模型响应 (Create a model response)",
        "description": "向模型发送文本/图像/文件输入以获得响应。支持工具调用（文件搜索、网络搜索、函数调用、计算机使用）、流式返回、多轮对话等。",
        "operationId": "createResponse",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResponsesRequest"
              },
              "examples": {
                "basic_text": {
                  "summary": "基础文本响应示例请求",
                  "value": {
                    "model": "gpt-4.1",
                    "input": "讲一个三句话的关于独角兽的睡前故事。"
                  }
                },
                "image_analysis": {
                  "summary": "图像分析示例请求",
                  "value": {
                    "model": "gpt-4.1",
                    "input": [
                      {
                        "role": "user",
                        "content": [
                          {
                            "type": "input_text",
                            "text": "描述这张图片中的内容"
                          },
                          {
                            "type": "input_image",
                            "image_url": "https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg"
                          }
                        ]
                      }
                    ]
                  }
                },
                "function_call": {
                  "summary": "函数调用示例",
                  "value": {
                    "model": "gpt-4.1",
                    "input": "波士顿今天的天气如何？",
                    "tools": [
                      {
                        "type": "function",
                        "name": "get_current_weather",
                        "description": "获取指定位置的当前天气",
                        "parameters": {
                          "type": "object",
                          "properties": {
                            "location": {
                              "type": "string",
                              "description": "城市和州，例如 San Francisco, CA"
                            },
                            "unit": {
                              "type": "string",
                              "enum": [
                                "celsius",
                                "fahrenheit"
                              ]
                            }
                          },
                          "required": [
                            "location",
                            "unit"
                          ]
                        }
                      }
                    ],
                    "tool_choice": "auto"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "成功 - 返回 Response 对象",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseObject"
                },
                "examples": {
                  "basic_text_response": {
                    "summary": "基础文本响应（示例）",
                    "value": {
                      "id": "resp_67ccd2bed1ec8190b14f964abc0542670bb6a6b452d3795b",
                      "object": "response",
                      "created_at": 1741476542,
                      "status": "completed",
                      "model": "gpt-4.1",
                      "output": [
                        {
                          "type": "message",
                          "id": "msg_67ccd2bf17f0819081ff3bb2cf6508e60bb6a6b452d3795b",
                          "status": "completed",
                          "role": "assistant",
                          "content": [
                            {
                              "type": "output_text",
                              "text": "在一个宁静的月夜下，一只名叫璐米娜的独角兽发现了一个倒映着星星的隐藏水池。当她将独角浸入水中时，水池开始闪烁，显现出通往一个有着无尽夜空的魔法世界的路径。充满好奇，璐米娜为所有做梦的人许下愿望，希望他们能找到自己的隐藏魔法，当她回头望去，她的蹄印像星尘一样闪烁。",
                              "annotations": []
                            }
                          ]
                        }
                      ],
                      "temperature": 1.0,
                      "top_p": 1.0,
                      "truncation": "disabled",
                      "usage": {
                        "input_tokens": 36,
                        "output_tokens": 87,
                        "total_tokens": 123
                      }
                    }
                  },
                  "image_analysis_response": {
                    "summary": "图像分析响应（示例）",
                    "value": {
                      "id": "resp_67ccd3a9da748190baa7f1570fe91ac604becb25c45c1d41",
                      "object": "response",
                      "created_at": 1741476777,
                      "status": "completed",
                      "model": "gpt-4.1",
                      "output": [
                        {
                          "type": "message",
                          "id": "msg_67ccd3acc8d48190a77525dc6de64b4104becb25c45c1d41",
                          "status": "completed",
                          "role": "assistant",
                          "content": [
                            {
                              "type": "output_text",
                              "text": "这张图片展示了一条木制栈道或小径穿过茂密的绿色草地，上方是点缀着几朵云的蓝天。场景呈现出一个宁静的自然区域，可能是公园或自然保护区。背景中有树木和灌木丛。整个景观展现出和谐的自然环境，栈道为游客提供了一条穿过湿地或草原而不影响周围生态系统的路径。",
                              "annotations": []
                            }
                          ]
                        }
                      ],
                      "usage": {
                        "input_tokens": 328,
                        "output_tokens": 52,
                        "total_tokens": 380
                      }
                    }
                  },
                  "web_search_tool_response": {
                    "summary": "网络搜索工具调用示例响应",
                    "value": {
                      "id": "resp_67ccf18ef5fc8190b16dbee19bc54e5f087bb177ab789d5c",
                      "object": "response",
                      "created_at": 1741484430,
                      "status": "completed",
                      "model": "gpt-4.1",
                      "output": [
                        {
                          "type": "web_search_call",
                          "id": "ws_67ccf18f64008190a39b619f4c8455ef087bb177ab789d5c",
                          "status": "completed"
                        },
                        {
                          "type": "message",
                          "id": "msg_67ccf190ca3881909d433c50b1f6357e087bb177ab789d5c",
                          "status": "completed",
                          "role": "assistant",
                          "content": [
                            {
                              "type": "output_text",
                              "text": "截至今天，2025年3月9日，一则值得关注的积极新闻是中国科学家在可再生能源领域取得重大突破，成功研发出一种新型高效太阳能电池，转化率达到了创纪录的35%，这可能会极大推动清洁能源的普及和应用。",
                              "annotations": [
                                {
                                  "type": "url_citation",
                                  "start_index": 42,
                                  "end_index": 100,
                                  "url": "https://example.com/renewable-energy-breakthrough/?utm_source=chatgpt.com",
                                  "title": "中国科学家在可再生能源领域取得重大突破"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "tools": [
                        {
                          "type": "web_search_preview",
                          "search_context_size": "medium"
                        }
                      ],
                      "usage": {
                        "input_tokens": 328,
                        "output_tokens": 356,
                        "total_tokens": 684
                      }
                    }
                  },
                  "file_search_tool_response": {
                    "summary": "文件搜索工具调用示例响应",
                    "value": {
                      "id": "resp_67ccf4c55fc48190b71bd0463ad3306d09504fb6872380d7",
                      "object": "response",
                      "created_at": 1741485253,
                      "status": "completed",
                      "model": "gpt-4.1",
                      "output": [
                        {
                          "type": "file_search_call",
                          "id": "fs_67ccf4c63cd08190887ef6464ba5681609504fb6872380d7",
                          "status": "completed",
                          "queries": [
                            "古代棕龙的特性和属性"
                          ]
                        },
                        {
                          "type": "message",
                          "id": "msg_67ccf4c93e5c81909d595b369351a9d309504fb6872380d7",
                          "status": "completed",
                          "role": "assistant",
                          "content": [
                            {
                              "type": "output_text",
                              "text": "根据资料，古代棕龙具有以下特性和属性：\n\n1. 物理特征：古代棕龙体型庞大，体长可达25-30米，翼展约35米。它们的鳞片呈深棕色至铜色，随着年龄增长会变得更加暗沉。头部有特征性的双角和脊刺，下颚强壮，适合撕裂猎物。\n\n2. 能力：它们能喷吐强力的酸液，对目标造成严重腐蚀伤害。古代棕龙还拥有出色的掘地能力，常在沙漠或山地挖掘复杂的巢穴系统。\n\n3. 智力：被认为是龙族中最为狡猾和有耐心的品种，智力极高，精通多种语言，并具有复杂的战术思维。",
                              "annotations": [
                                {
                                  "type": "file_citation",
                                  "index": 80,
                                  "file_id": "file-4wDz5b167pAf72nx1h9eiN",
                                  "filename": "dragons.pdf"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "tools": [
                        {
                          "type": "file_search",
                          "vector_store_ids": [
                            "vs_1234567890"
                          ],
                          "max_num_results": 20
                        }
                      ],
                      "usage": {
                        "input_tokens": 18307,
                        "output_tokens": 348,
                        "total_tokens": 18655
                      }
                    }
                  },
                  "function_call_response": {
                    "summary": "函数调用示例响应",
                    "value": {
                      "id": "resp_67ca09c5efe0819096d0511c92b8c890096610f474011cc0",
                      "object": "response",
                      "created_at": 1741294021,
                      "status": "completed",
                      "model": "gpt-4.1-2025-04-14",
                      "output": [
                        {
                          "type": "function_call",
                          "id": "fc_67ca09c6bedc8190a7abfec07b1a1332096610f474011cc0",
                          "call_id": "call_unLAR8MvFNptuiZK6K6HCy5k",
                          "name": "get_current_weather",
                          "arguments": "{\"location\":\"波士顿, MA\",\"unit\":\"celsius\"}",
                          "status": "completed"
                        }
                      ],
                      "tools": [
                        {
                          "type": "function",
                          "name": "get_current_weather",
                          "description": "获取指定位置的当前天气",
                          "parameters": {
                            "type": "object",
                            "properties": {
                              "location": {
                                "type": "string"
                              },
                              "unit": {
                                "type": "string",
                                "enum": [
                                  "celsius",
                                  "fahrenheit"
                                ]
                              }
                            },
                            "required": [
                              "location",
                              "unit"
                            ]
                          },
                          "strict": true
                        }
                      ],
                      "usage": {
                        "input_tokens": 291,
                        "output_tokens": 23,
                        "total_tokens": 314
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "请求格式错误"
          },
          "401": {
            "description": "未授权 - API Key 无效或缺失"
          },
          "500": {
            "description": "服务器内部错误"
          }
        },
        "x-codeSamples": [
          {
            "lang": "curl",
            "label": "curl",
            "source": "curl https://你的newapi服务器地址/v1/responses               -H \"Content-Type: application/json\"               -H \"Authorization: Bearer $NEWAPI_API_KEY\"               -d '{\n    \"model\": \"gpt-4.1\",\n    \"input\": \"讲一个三句话的关于独角兽的睡前故事。\"\n  }'"
          },
          {
            "lang": "javascript",
            "label": "JavaScript (node-fetch)",
            "source": "import fetch from 'node-fetch';\nconst res = await fetch('https://你的newapi服务器地址/v1/responses', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n    'Authorization': `Bearer ${process.env.NEWAPI_API_KEY}`\n  },\n  body: JSON.stringify({\n    model: 'gpt-4.1',\n    input: '讲一个三句话的关于独角兽的睡前故事。'\n  })\n});\nconsole.log(await res.json());"
          },
          {
            "lang": "python",
            "label": "Python (requests)",
            "source": "import os, requests\nurl = 'https://你的newapi服务器地址/v1/responses'\nheaders = {'Authorization': f'Bearer {os.getenv(\"NEWAPI_API_KEY\")}', 'Content-Type': 'application/json'}\npayload = {'model': 'gpt-4.1', 'input': '讲一个三句话的关于独角兽的睡前故事。'}\nr = requests.post(url, headers=headers, json=payload)\nprint(r.json())"
          },
          {
            "lang": "csharp",
            "label": "C# (HttpClient)",
            "source": "using System;\nusing System.Net.Http;\nusing System.Text;\nusing System.Threading.Tasks;\n\nvar client = new HttpClient();\nclient.DefaultRequestHeaders.Add(\"Authorization\", \"Bearer \" + Environment.GetEnvironmentVariable(\"NEWAPI_API_KEY\"));\nvar payload = \"{ \\\"model\\\": \\\"gpt-4.1\\\", \\\"input\\\": \\\"讲一个三句话的关于独角兽的睡前故事。\\\" }\";\nvar content = new StringContent(payload, Encoding.UTF8, \"application/json\");\nvar resp = await client.PostAsync(\"https://你的newapi服务器地址/v1/responses\", content);\nvar text = await resp.Content.ReadAsStringAsync();\nConsole.WriteLine(text);"
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "ResponsesRequest": {
        "type": "object",
        "description": "请求体：创建响应时使用的字段",
        "properties": {
          "model": {
            "type": "string",
            "description": "用于生成响应的模型ID，例如 gpt-4.1"
          },
          "input": {
            "oneOf": [
              {
                "type": "string",
                "description": "文本输入 (等同于 user 角色)"
              },
              {
                "type": "array",
                "description": "输入项数组，每项可包含 role 和 content 字段"
              }
            ],
            "description": "向模型提供的输入"
          },
          "include": {
            "type": [
              "array",
              "null"
            ],
            "description": "指定在响应中包含的附加数据，例如 file_search_call.results"
          },
          "instructions": {
            "type": [
              "string",
              "null"
            ],
            "description": "插入到模型上下文中的系统/开发者指令"
          },
          "max_output_tokens": {
            "type": [
              "integer",
              "null"
            ],
            "description": "生成输出的最大 token 数"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "可选的元数据键值对 (最多16对)"
          },
          "parallel_tool_calls": {
            "type": "boolean",
            "default": true
          },
          "previous_response_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "reasoning": {
            "$ref": "#/components/schemas/ReasoningConfig"
          },
          "service_tier": {
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "auto",
              "default",
              "flex"
            ],
            "default": "auto"
          },
          "store": {
            "type": [
              "boolean",
              "null"
            ],
            "default": true
          },
          "stream": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "temperature": {
            "type": [
              "number",
              "null"
            ],
            "default": 1.0
          },
          "text": {
            "$ref": "#/components/schemas/TextFormat"
          },
          "tool_choice": {
            "type": [
              "string",
              "object"
            ],
            "description": "工具调用选择策略或具体工具"
          },
          "tools": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ToolDef"
            }
          },
          "top_p": {
            "type": [
              "number",
              "null"
            ],
            "default": 1.0
          },
          "truncation": {
            "type": [
              "string",
              "null"
            ],
            "default": "disabled"
          },
          "user": {
            "type": [
              "string",
              "null"
            ],
            "description": "最终用户 ID，用于滥用检测"
          }
        },
        "required": [
          "model",
          "input"
        ]
      },
      "ReasoningConfig": {
        "type": "object",
        "description": "推理配置，仅适用于 o 系列模型",
        "properties": {
          "effort": {
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "low",
              "medium",
              "high"
            ]
          },
          "summary": {
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "auto",
              "concise",
              "detailed"
            ]
          }
        }
      },
      "TextFormat": {
        "type": "object",
        "properties": {
          "format": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "text",
                  "json_schema",
                  "json_object"
                ]
              },
              "name": {
                "type": "string"
              },
              "schema": {
                "type": "object"
              },
              "description": {
                "type": "string"
              }
            }
          }
        }
      },
      "ToolDef": {
        "type": "object",
        "description": "工具定义，可以是 file_search, web_search_preview, function, computer_use_preview 等",
        "properties": {
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "parameters": {
            "type": "object"
          },
          "vector_store_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "max_num_results": {
            "type": "integer"
          },
          "search_context_size": {
            "type": "string"
          }
        }
      },
      "ResponseObject": {
        "type": "object",
        "description": "Response 对象，包含生成的输出和工具使用信息",
        "properties": {
          "id": {
            "type": "string"
          },
          "object": {
            "type": "string",
            "example": "response"
          },
          "created_at": {
            "type": "integer"
          },
          "status": {
            "type": "string",
            "description": "completed, in_progress 等"
          },
          "error": {
            "type": [
              "object",
              "null"
            ]
          },
          "incomplete_details": {
            "type": [
              "object",
              "null"
            ]
          },
          "instructions": {
            "type": [
              "string",
              "null"
            ]
          },
          "max_output_tokens": {
            "type": [
              "integer",
              "null"
            ]
          },
          "model": {
            "type": "string"
          },
          "output": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OutputItem"
            }
          },
          "parallel_tool_calls": {
            "type": "boolean"
          },
          "previous_response_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "reasoning": {
            "$ref": "#/components/schemas/ReasoningResult"
          },
          "store": {
            "type": "boolean"
          },
          "temperature": {
            "type": "number"
          },
          "text": {
            "type": "object"
          },
          "tool_choice": {
            "type": [
              "string",
              "object"
            ]
          },
          "tools": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "top_p": {
            "type": "number"
          },
          "truncation": {
            "type": "string"
          },
          "usage": {
            "$ref": "#/components/schemas/Usage"
          },
          "user": {
            "type": [
              "string",
              "null"
            ]
          },
          "metadata": {
            "type": "object"
          }
        }
      },
      "OutputItem": {
        "type": "object",
        "oneOf": [
          {
            "$ref": "#/components/schemas/MessageOutput"
          },
          {
            "$ref": "#/components/schemas/FileSearchCall"
          },
          {
            "$ref": "#/components/schemas/WebSearchCall"
          },
          {
            "$ref": "#/components/schemas/FunctionCall"
          },
          {
            "$ref": "#/components/schemas/ComputerCall"
          }
        ]
      },
      "MessageOutput": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "message"
            ],
            "example": "message"
          },
          "id": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "assistant",
              "user",
              "system",
              "developer"
            ]
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OutputContentItem"
            }
          }
        }
      },
      "OutputContentItem": {
        "type": "object",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "output_text"
                ]
              },
              "text": {
                "type": "string"
              },
              "annotations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Annotation"
                }
              }
            }
          }
        ]
      },
      "Annotation": {
        "type": "object",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "file_citation"
                ]
              },
              "file_id": {
                "type": "string"
              },
              "index": {
                "type": "integer"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "url_citation"
                ]
              },
              "start_index": {
                "type": "integer"
              },
              "end_index": {
                "type": "integer"
              },
              "url": {
                "type": "string",
                "format": "uri"
              },
              "title": {
                "type": "string"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "file_path"
                ]
              },
              "file_id": {
                "type": "string"
              },
              "index": {
                "type": "integer"
              }
            }
          }
        ]
      },
      "FileSearchCall": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "file_search_call"
          },
          "id": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "queries": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "results": {
            "type": [
              "array",
              "null"
            ]
          }
        }
      },
      "WebSearchCall": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "web_search_call"
          },
          "id": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "FunctionCall": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "function_call"
          },
          "id": {
            "type": "string"
          },
          "call_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "arguments": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "ComputerCall": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "computer_call"
          },
          "id": {
            "type": "string"
          },
          "call_id": {
            "type": "string"
          },
          "action": {
            "type": "object"
          },
          "pending_safety_checks": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "status": {
            "type": "string"
          }
        }
      },
      "ReasoningResult": {
        "type": "object",
        "properties": {
          "effort": {
            "type": [
              "string",
              "null"
            ]
          },
          "summary": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "Usage": {
        "type": "object",
        "properties": {
          "input_tokens": {
            "type": "integer"
          },
          "input_tokens_details": {
            "type": "object"
          },
          "output_tokens": {
            "type": "integer"
          },
          "output_tokens_details": {
            "type": "object"
          },
          "total_tokens": {
            "type": "integer"
          }
        }
      }
    }
  }
}