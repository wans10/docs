openapi: 3.1.0
info:
  title: OpenAI Responses API
  description: 使用 OpenAI 的语言模型生成响应的 API，支持文本和图像输入。
  version: 1.0.0
servers:
  - url: https://api.openai.com/v1
    description: OpenAI API 生产服务器
paths:
  /responses:
    post:
      operationId: createResponse
      summary: 创建使用指定模型的响应
      description: 根据提供的模型和输入（支持文本或消息数组，包含文本和图像）生成文本响应。需要 API 密钥进行身份验证。
      tags:
        - Responses
      security:
        - bearerAuth: []
      x-codeSamples:
        - lang: cURL
          label: 文本输入示例
          source: |
            curl https://api.openai.com/v1/responses \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $OPENAI_API_KEY" \
              -d '{
                "model": "gpt-4.1",
                "input": "Tell me a three sentence bedtime story about a unicorn."
              }'
        - lang: cURL
          label: 图像输入示例
          source: |
            curl https://api.openai.com/v1/responses \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $OPENAI_API_KEY" \
              -d '{
                "model": "gpt-4.1",
                "input": [
                  {
                    "role": "user",
                    "content": [
                      {"type": "input_text", "text": "what is in this image?"},
                      {
                        "type": "input_image",
                        "image_url": "https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg"
                      }
                    ]
                  }
                ]
              }'
        - lang: JavaScript
          label: 文本输入示例
          source: |
            import OpenAI from "openai";

            const openai = new OpenAI();

            const response = await openai.responses.create({
                model: "gpt-4.1",
                input: "Tell me a three sentence bedtime story about a unicorn."
            });

            console.log(response);
        - lang: JavaScript
          label: 图像输入示例
          source: |
            import OpenAI from "openai";

            const openai = new OpenAI();

            const response = await openai.responses.create({
                model: "gpt-4.1",
                input: [
                    {
                        role: "user",
                        content: [
                            { type: "input_text", text: "what is in this image?" },
                            {
                                type: "input_image",
                                image_url:
                                    "https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg",
                            },
                        ],
                    },
                ],
            });

            console.log(response);
        - lang: Python
          label: 文本输入示例
          source: |
            from openai import OpenAI

            client = OpenAI()

            response = client.responses.create(
              model="gpt-4.1",
              input="Tell me a three sentence bedtime story about a unicorn."
            )

            print(response)
        - lang: Python
          label: 图像输入示例
          source: |
            from openai import OpenAI

            client = OpenAI()

            response = client.responses.create(
                model="gpt-4.1",
                input=[
                    {
                        "role": "user",
                        "content": [
                            { "type": "input_text", "text": "what is in this image?" },
                            {
                                "type": "input_image",
                                "image_url": "https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg"
                            }
                        ]
                    }
                ]
            )

            print(response)
        - lang: C#
          label: 文本输入示例
          source: |
            using System;
            using OpenAI.Responses;

            OpenAIResponseClient client = new(
                model: "gpt-4.1",
                apiKey: Environment.GetEnvironmentVariable("OPENAI_API_KEY")
            );

            OpenAIResponse response = client.CreateResponse("Tell me a three sentence bedtime story about a unicorn.");

            Console.WriteLine(response.GetOutputText());
        - lang: C#
          label: 图像输入示例
          source: |
            using System;
            using System.Collections.Generic;
            using OpenAI.Responses;

            OpenAIResponseClient client = new(
                model: "gpt-4.1",
                apiKey: Environment.GetEnvironmentVariable("OPENAI_API_KEY")
            );

            List<ResponseItem> inputItems =
            [
                ResponseItem.CreateUserMessageItem(
                    [
                        ResponseContentPart.CreateInputTextPart("What is in this image?"),
                        ResponseContentPart.CreateInputImagePart(new Uri("https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg"))
                    ]
                )
            ];

            OpenAIResponse response = client.CreateResponse(inputItems);

            Console.WriteLine(response.GetOutputText());
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateResponseRequest'
            examples:
              bedtimeStory:
                summary: 生成关于独角兽的睡前故事
                value:
                  model: gpt-4.1
                  input: Tell me a three sentence bedtime story about a unicorn.
              imageDescription:
                summary: 描述图像内容
                value:
                  model: gpt-4.1
                  input:
                    - role: user
                      content:
                        - type: input_text
                          text: what is in this image?
                        - type: input_image
                          image_url: https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg
      responses:
        '200':
          description: 成功生成包含文本的响应。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
              examples:
                bedtimeStoryResponse:
                  summary: 独角兽睡前故事的响应
                  value:
                    id: resp_67ccd2bed1ec8190b14f964abc0542670bb6a6b452d3795b
                    object: response
                    created_at: 1741476542
                    status: completed
                    error: null
                    incomplete_details: null
                    instructions: null
                    max_output_tokens: null
                    model: gpt-4.1-2025-04-14
                    output:
                      - type: message
                        id: msg_67ccd2bf17f0819081ff3bb2cf6508e60bb6a6b452d3795b
                        status: completed
                        role: assistant
                        content:
                          - type: output_text
                            text: 在银色月光下的宁静树林中，一只名叫卢米娜的独角兽发现了一个反射星光的隐秘水池。当她将角浸入水中，水池开始闪烁，揭示出一条通往无尽夜空的神奇路径。卢米娜满怀惊奇，低语了一个愿望，希望所有梦想者都能找到属于自己的魔法，然后回头一看，她的蹄印如星尘般闪耀。
                            annotations: []
                    parallel_tool_calls: true
                    previous_response_id: null
                    reasoning:
                      effort: null
                      summary: null
                    store: true
                    temperature: 1.0
                    text:
                      format:
                        type: text
                    tool_choice: auto
                    tools: []
                    top_p: 1.0
                    truncation: disabled
                    usage:
                      input_tokens: 36
                      input_tokens_details:
                        cached_tokens: 0
                      output_tokens: 87
                      output_tokens_details:
                        reasoning_tokens: 0
                      total_tokens: 123
                    user: null
                    metadata: {}
                imageDescriptionResponse:
                  summary: 图像描述的响应
                  value:
                    id: resp_67ccd3a9da748190baa7f1570fe91ac604becb25c45c1d41
                    object: response
                    created_at: 1741476777
                    status: completed
                    error: null
                    incomplete_details: null
                    instructions: null
                    max_output_tokens: null
                    model: gpt-4.1-2025-04-14
                    output:
                      - type: message
                        id: msg_67ccd3acc8d48190a77525dc6de64b4104becb25c45c1d41
                        status: completed
                        role: assistant
                        content:
                          - type: output_text
                            text: 图像展示了一条木制栈道或小径，穿过郁郁葱葱的绿色草地，蓝天下点缀着几朵白云。场景暗示了一个宁静的自然区域，可能是公园或自然保护区。背景中有树木和灌木。
                            annotations: []
                    parallel_tool_calls: true
                    previous_response_id: null
                    reasoning:
                      effort: null
                      summary: null
                    store: true
                    temperature: 1.0
                    text:
                      format:
                        type: text
                    tool_choice: auto
                    tools: []
                    top_p: 1.0
                    truncation: disabled
                    usage:
                      input_tokens: 328
                      input_tokens_details:
                        cached_tokens: 0
                      output_tokens: 52
                      output_tokens_details:
                        helper_tokens: 0
                      total_tokens: 380
                    user: null
                    metadata: {}
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    CreateResponseRequest:
      type: object
      required:
        - model
        - input
      properties:
        model:
          type: string
          description: 用于生成响应的模型 ID（例如 gpt-4.1）。
          example: gpt-4.1
        input:
          oneOf:
            - type: string
              description: 简单的文本输入提示。
              example: Tell me a three sentence bedtime story about a unicorn.
            - type: array
              description: 包含用户消息的数组，支持文本和图像输入。
              items:
                $ref: '#/components/schemas/InputMessage'
      additionalProperties: false
    InputMessage:
      type: object
      required:
        - role
        - content
      properties:
        role:
          type: string
          description: 消息的角色，例如 "user"。
          example: user
        content:
          type: array
          description: 消息内容，支持文本和图像。
          items:
            oneOf:
              - $ref: '#/components/schemas/InputTextContent'
              - $ref: '#/components/schemas/InputImageContent'
    InputTextContent:
      type: object
      required:
        - type
        - text
      properties:
        type:
          type: string
          description: 内容类型，固定为 "input_text"。
          example: input_text
        text:
          type: string
          description: 输入的文本内容。
          example: what is in this image?
      additionalProperties: false
    InputImageContent:
      type: object
      required:
        - type
        - image_url
      properties:
        type:
          type: string
          description: 内容类型，固定为 "input_image"。
          example: input_image
        image_url:
          type: string
          description: 图像的 URL 地址。
          example: https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg
      additionalProperties: false
    Response:
      type: object
      properties:
        id:
          type: string
          description: 响应的唯一标识符。
          example: resp_67ccd2bed1ec8190b14f964abc0542670bb6a6b452d3795b
        object:
          type: string
          description: 对象类型，始终为 "response"。
          example: response
        created_at:
          type: integer
          description: 响应创建时的 Unix 时间戳（秒）。
          example: 1741476542
        status:
          type: string
          description: 响应的状态。
          example: completed
        error:
          type: object
          description: 错误详情（如果有）。
          nullable: true
        incomplete_details:
          type: object
          description: 关于不完整响应的详细信息（如果适用）。
          nullable: true
        instructions:
          type: object
          description: 提供的指令（如果有）。
          nullable: true
        max_output_tokens:
          type: integer
          description: 最大输出令牌数（如果指定）。
          nullable: true
        model:
          type: string
          description: 用于生成响应的模型。
          example: gpt-4.1-2025-04-14
        output:
          type: array
          description: 输出消息数组。
          items:
            $ref: '#/components/schemas/OutputMessage'
        parallel_tool_calls:
          type: boolean
          description: 是否启用并行工具调用。
          example: true
        previous_response_id:
          type: string
          description: 前一个响应的 ID（如果有）。
          nullable: true
        reasoning:
          type: object
          description: 响应的推理详情。
          properties:
            effort:
              type: string
              nullable: true
            summary:
              type: string
              nullable: true
        store:
          type: boolean
          description: 是否存储响应。
          example: true
        temperature:
          type: number
          description: 采样的温度值。
          example: 1.0
        text:
          type: object
          description: 文本格式详情。
          properties:
            format:
              type: object
              properties:
                type:
                  type: string
                  example: text
        tool_choice:
          type: string
          description: 工具选择策略。
          example: auto
        tools:
          type: array
          description: 使用的工具列表（如果有）。
          items:
            type: object
          example: []
        top_p:
          type: number
          description: Top-p 采样值。
          example: 1.0
        truncation:
          type: string
          description: 截断策略。
          example: disabled
        usage:
          type: object
          description: 令牌使用详情。
          properties:
            input_tokens:
              type: integer
              example: 328
            input_tokens_details:
              type: object
              properties:
                cached_tokens:
                  type: integer
                  example: 0
            output_tokens:
              type: integer
              example: 52
            output_tokens_details:
              type: object
              properties:
                reasoning_tokens:
                  type: integer
                  example: 0
            total_tokens:
              type: integer
              example: 380
        user:
          type: object
          description: 用户信息（如果提供）。
          nullable: true
        metadata:
          type: object
          description: 响应的附加元数据。
          example: {}
    OutputMessage:
      type: object
      properties:
        type:
          type: string
          description: 输出消息的类型。
          example: message
        id:
          type: string
          description: 消息的唯一标识符。
          example: msg_67ccd2bf17f0819081ff3bb2cf6508e60bb6a6b452d3795b
        status:
          type: string
          description: 消息的状态。
          example: completed
        role:
          type: string
          description: 消息发送者的角色。
          example: assistant
        content:
          type: array
          description: 消息的内容。
          items:
            type: object
            properties:
              type:
                type: string
                description: 内容的类型。
                example: output_text
              text:
                type: string
                description: 生成的文本内容。
                example: 图像展示了一条木制栈道或小径，穿过郁郁葱葱的绿色草地，蓝天下点缀着几朵白云。场景暗示了一个宁静的自然区域，可能是公园或自然保护区。背景中有树木和灌木。
              annotations:
                type: array
                description: 内容的注解（如果有）。
                items:
                  type: object
                example: []
    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            message:
              type: string
              description: 错误描述。
            type:
              type: string
              description: 错误类型。
            code:
              type: string
              description: 错误代码（如果适用）。