openapi: 3.1.0
info:
  title: LLM Hub API
  description: API for accessing various language models through a unified interface
  version: 1.0.0
servers:
  - url: https://api.llmhub.com.cn
    description: Production server

paths:
  /v1/responses:
    post:
      summary: Create a response
      description: Generate a response using the specified model
      operationId: createResponse
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResponseRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseObject'
      x-codeSamples:
        - lang: curl
          label: cURL
          source: |
            curl https://api.openai.com/v1/responses \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $OPENAI_API_KEY" \
              -d '{
                "model": "gpt-4.1",
                "input": "Tell me a three sentence bedtime story about a unicorn."
              }'
        - lang: javascript
          label: JavaScript
          source: |
            import OpenAI from "openai";
            
            const openai = new OpenAI();
            
            const response = await openai.responses.create({
                model: "gpt-4.1",
                input: "Tell me a three sentence bedtime story about a unicorn."
            });
            
            console.log(response);
        - lang: python
          label: Python
          source: |
            from openai import OpenAI
            
            client = OpenAI()
            
            response = client.responses.create(
              model="gpt-4.1",
              input="Tell me a three sentence bedtime story about a unicorn."
            )
            
            print(response)
        - lang: csharp
          label: C#
          source: |
            using System;
            using OpenAI.Responses;
            
            OpenAIResponseClient client = new(
                model: "gpt-4.1",
                apiKey: Environment.GetEnvironmentVariable("OPENAI_API_KEY")
            );
            
            OpenAIResponse response = client.CreateResponse("Tell me a three sentence bedtime story about a unicorn.");
            
            Console.WriteLine(response.GetOutputText());

components:
  schemas:
    ResponseRequest:
      type: object
      required:
        - model
        - input
      properties:
        model:
          type: string
          description: ID of the model to use
          example: "gpt-4.1"
        input:
          type: string
          description: The input prompt for the model
          example: "Tell me a three sentence bedtime story about a unicorn."

    ResponseObject:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the response
          example: "resp_67ccd2bed1ec8190b14f964abc0542670bb6a6b452d3795b"
        object:
          type: string
          description: The object type, which is always response
          example: "response"
        created_at:
          type: integer
          description: The Unix timestamp (in seconds) of when the response was created
          example: 1741476542
        status:
          type: string
          description: The status of the response
          example: "completed"
        error:
          type: object
          nullable: true
          description: Error information if the response failed
        incomplete_details:
          type: object
          nullable: true
          description: Details about why the response is incomplete
        instructions:
          type: object
          nullable: true
          description: Instructions for the response
        max_output_tokens:
          type: object
          nullable: true
          description: Maximum number of output tokens
        model:
          type: string
          description: The model used for the response
          example: "gpt-4.1-2025-04-14"
        output:
          type: array
          items:
            $ref: '#/components/schemas/OutputMessage'
        parallel_tool_calls:
          type: boolean
          description: Whether parallel tool calls are enabled
          example: true
        previous_response_id:
          type: string
          nullable: true
          description: ID of the previous response in a conversation
        reasoning:
          $ref: '#/components/schemas/Reasoning'
        store:
          type: boolean
          description: Whether the response is stored
          example: true
        temperature:
          type: number
          format: float
          description: Sampling temperature
          example: 1.0
        text:
          $ref: '#/components/schemas/TextFormat'
        tool_choice:
          type: string
          description: How tools are chosen
          example: "auto"
        tools:
          type: array
          items:
            type: object
          description: List of tools used
        top_p:
          type: number
          format: float
          description: Nucleus sampling parameter
          example: 1.0
        truncation:
          type: string
          description: Truncation setting
          example: "disabled"
        usage:
          $ref: '#/components/schemas/Usage'
        user:
          type: string
          nullable: true
          description: User identifier
        metadata:
          type: object
          description: Additional metadata

    OutputMessage:
      type: object
      properties:
        type:
          type: string
          example: "message"
        id:
          type: string
          example: "msg_67ccd2bf17f0819081ff3bb2cf6508e60bb6a6b452d3795b"
        status:
          type: string
          example: "completed"
        role:
          type: string
          example: "assistant"
        content:
          type: array
          items:
            $ref: '#/components/schemas/Content'

    Content:
      type: object
      properties:
        type:
          type: string
          example: "output_text"
        text:
          type: string
          example: "In a peaceful grove beneath a silver moon, a unicorn named Lumina discovered a hidden pool that reflected the stars. As she dipped her horn into the water, the pool began to shimmer, revealing a pathway to a magical realm of endless night skies. Filled with wonder, Lumina whispered a wish for all who dream to find their own hidden magic, and as she glanced back, her hoofprints sparkled like stardust."
        annotations:
          type: array
          items:
            type: object

    Reasoning:
      type: object
      properties:
        effort:
          type: object
          nullable: true
        summary:
          type: object
          nullable: true

    TextFormat:
      type: object
      properties:
        format:
          $ref: '#/components/schemas/Format'

    Format:
      type: object
      properties:
        type:
          type: string
          example: "text"

    Usage:
      type: object
      properties:
        input_tokens:
          type: integer
          example: 36
        input_tokens_details:
          $ref: '#/components/schemas/InputTokenDetails'
        output_tokens:
          type: integer
          example: 87
        output_tokens_details:
          $ref: '#/components/schemas/OutputTokenDetails'
        total_tokens:
          type: integer
          example: 123

    InputTokenDetails:
      type: object
      properties:
        cached_tokens:
          type: integer
          example: 0

    OutputTokenDetails:
      type: object
      properties:
        reasoning_tokens:
          type: integer
          example: 0