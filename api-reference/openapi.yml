openapi: 3.1.0
info:
  title: LLMHub API
  description: API for interacting with LLMHub's AI models, supporting text, image, file inputs, web search, file search, streaming, functions, and reasoning capabilities.
  version: 1.0.0
servers:
  - url: https://api.llmhub.com.cn/v1
    description: Production server
paths:
  /responses:
    post:
      summary: Create a response from the LLM
      description: Sends a request to the LLM with various input types (text, image, file, etc.) and optional tools like web search, file search, or functions. Supports streaming and reasoning modes.
      operationId: createResponse
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/TextInputRequest'
                - $ref: '#/components/schemas/ImageInputRequest'
                - $ref: '#/components/schemas/FileInputRequest'
                - $ref: '#/components/schemas/WebSearchRequest'
                - $ref: '#/components/schemas/FileSearchRequest'
                - $ref: '#/components/schemas/StreamingRequest'
                - $ref: '#/components/schemas/FunctionRequest'
                - $ref: '#/components/schemas/ReasoningRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
            text/event-stream:
              schema:
                type: object
                description: Server-sent events for streaming responses
        '401':
          description: Unauthorized - Invalid or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - BearerAuth: []
      x-codeSamples:
        - label: Image Input
          lang: cURL
          source: |
            curl https://api.opena1.com/v1/responses \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $OPENAI_API_KEY" \
              -d '{
                "model": "gpt-4.1",
                "input": [
                  {
                    "role": "user",
                    "content": [
                      {"type": "input_text", "text": "what is in this image?"},
                      {
                        "type": "input_image",
                        "image_url": "https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg"
                      }
                    ]
                  }
                ]
              }'
        - label: File Input
          lang: cURL
          source: |
            curl https://api.llmhub.com.cn/v1/responses \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $LLMHub_API_KEY" \
              -d '{
                "model": "gpt-4.1",
                "input": [
                  {
                    "role": "user",
                    "content": [
                      {"type": "input_text", "text": "what is in this file?"},
                      {
                        "type": "input_file",
                        "file_url": "https://www.berkshirehathaway.com/letters/2024ltr.pdf"
                      }
                    ]
                  }
                ]
              }'
        - label: Web Search
          lang: cURL
          source: |
            curl https://api.llmhub.com.cn/v1/responses \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $LLMHub_API_KEY" \
              -d '{
                "model": "gpt-4.1",
                "tools": [{ "type": "web_search_preview" }],
                "input": "What was a positive news story from today?"
              }'
        - label: File Search
          lang: cURL
          source: |
            curl https://api.llmhub.com.cn/v1/responses \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $LLMHub_API_KEY" \
              -d '{
                "model": "gpt-4.1",
                "tools": [{
                  "type": "file_search",
                  "vector_store_ids": ["vs_1234567890"],
                  "max_num_results": 20
                }],
                "input": "What are the attributes of an ancient brown dragon?"
              }'
        - label: Streaming
          lang: cURL
          source: |
            curl https://api.llmhub.com.cn/v1/responses \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $LLMHub_API_KEY" \
              -d '{
                "model": "gpt-4.1",
                "instructions": "You are a helpful assistant.",
                "input": "Hello!",
                "stream": true
              }'
        - label: Functions
          lang: cURL
          source: |
            curl https://api.llmhub.com.cn/v1/responses \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $LLMHub_API_KEY" \
              -d '{
                "model": "gpt-4.1",
                "input": "What is the weather like in Boston today?",
                "tools": [
                  {
                    "type": "function",
                    "name": "get_current_weather",
                    "description": "Get the current weather in a given location",
                    "parameters": {
                      "type": "object",
                      "properties": {
                        "location": {
                          "type": "string",
                          "description": "The city and state, e.g. San Francisco, CA"
                        },
                        "unit": {
                          "type": "string",
                          "enum": ["celsius", "fahrenheit"]
                        }
                      },
                      "required": ["location", "unit"]
                    }
                  }
                ],
                "tool_choice": "auto"
              }'
        - label: Reasoning
          lang: cURL
          source: |
            curl https://api.llmhub.com.cn/v1/responses \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $LLMHub_API_KEY" \
              -d '{
                "model": "o3-mini",
                "input": "How much wood would a woodchuck chuck?",
                "reasoning": {
                  "effort": "high"
                }
              }'
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    TextInputRequest:
      type: object
      properties:
        model:
          type: string
          example: gpt-4.1
        input:
          type: string
          example: Tell me a three sentence bedtime story about a unicorn.
      required: [model, input]
    ImageInputRequest:
      type: object
      properties:
        model:
          type: string
          example: gpt-4.1
        input:
          type: array
          items:
            type: object
            properties:
              role:
                type: string
                enum: [user]
              content:
                type: array
                items:
                  oneOf:
                    - type: object
                      properties:
                        type:
                          type: string
                          enum: [input_text]
                        text:
                          type: string
                      required: [type, text]
                    - type: object
                      properties:
                        type:
                          type: string
                          enum: [input_image]
                        image_url:
                          type: string
                          format: uri
                      required: [type, image_url]
      required: [model, input]
    FileInputRequest:
      type: object
      properties:
        model:
          type: string
          example: gpt-4.1
        input:
          type: array
          items:
            type: object
            properties:
              role:
                type: string
                enum: [user]
              content:
                type: array
                items:
                  oneOf:
                    - type: object
                      properties:
                        type:
                          type: string
                          enum: [input_text]
                        text:
                          type: string
                      required: [type, text]
                    - type: object
                      properties:
                        type:
                          type: string
                          enum: [input_file]
                        file_url:
                          type: string
                          format: uri
                      required: [type, file_url]
      required: [model, input]
    WebSearchRequest:
      type: object
      properties:
        model:
          type: string
          example: gpt-4.1
        input:
          type: string
          example: What was a positive news story from today?
        tools:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                enum: [web_search_preview]
      required: [model, input, tools]
    FileSearchRequest:
      type: object
      properties:
        model:
          type: string
          example: gpt-4.1
        input:
          type: string
          example: What are the attributes of an ancient brown dragon?
        tools:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                enum: [file_search]
              vector_store_ids:
                type: array
                items:
                  type: string
              max_num_results:
                type: integer
                example: 20
      required: [model, input, tools]
    StreamingRequest:
      type: object
      properties:
        model:
          type: string
          example: gpt-4.1
        instructions:
          type: string
          example: You are a helpful assistant.
        input:
          type: string
          example: Hello!
        stream:
          type: boolean
          example: true
      required: [model, input, stream]
    FunctionRequest:
      type: object
      properties:
        model:
          type: string
          example: gpt-4.1
        input:
          type: string
          example: What is the weather like in Boston today?
        tools:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                enum: [function]
              name:
                type: string
              description:
                type: string
              parameters:
                type: object
                properties:
                  type:
                    type: string
                    enum: [object]
                  properties:
                    type: object
                  required:
                    type: array
                    items:
                      type: string
        tool_choice:
          type: string
          enum: [auto]
      required: [model, input, tools, tool_choice]
    ReasoningRequest:
      type: object
      properties:
        model:
          type: string
          example: o3-mini
        input:
          type: string
          example: How much wood would a woodchuck chuck?
        reasoning:
          type: object
          properties:
            effort:
              type: string
              enum: [high]
      required: [model, input, reasoning]
    Response:
      type: object
      properties:
        id:
          type: string
        object:
          type: string
          enum: [response]
        created_at:
          type: integer
        status:
          type: string
          enum: [completed, in_progress]
        error:
          type: object
          nullable: true
        output:
          type: array
          items:
            oneOf:
              - type: object
                properties:
                  type:
                    type: string
                    enum: [message]
                  id:
                    type: string
                  status:
                    type: string
                    enum: [completed, in_progress]
                  role:
                    type: string
                    enum: [assistant]
                  content:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          enum: [output_text]
                        text:
                          type: string
                        annotations:
                          type: array
                          items:
                            oneOf:
                              - type: object
                                properties:
                                  type:
                                    type: string
                                    enum: [url_citation, file_citation]
                                  start_index:
                                    type: integer
                                  end_index:
                                    type: integer
                                  url:
                                    type: string
                                    format: uri
                                  title:
                                    type: string
                              - type: object
                                properties:
                                  type:
                                    type: string
                                    enum: [file_citation]
                                  index:
                                    type: integer
                                  file_id:
                                    type: string
                                  filename:
                                    type: string
              - type: object
                properties:
                  type:
                    type: string
                    enum: [function_call, web_search_call, file_search_call]
                  id:
                    type: string
                  status:
                    type: string
                    enum: [completed]
        usage:
          type: object
          properties:
            input_tokens:
              type: integer
            output_tokens:
              type: integer
            total_tokens:
              type: integer
        metadata:
          type: object
      required: [id, object, created_at, status, output]
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required: [code, message]